# Generated by Django 4.0.4 on 2022-05-06 15:57

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='KnnModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('neighbors', models.IntegerField(default=5)),
                ('weights', models.CharField(choices=[('uniform', 'uniform'), ('distance', 'distance')], default='U', max_length=10)),
                ('p', models.IntegerField(choices=[(1, 'manhattan distance'), (2, 'euclidean distance')], default=2)),
                ('mae', models.FloatField(default=0)),
                ('mse', models.FloatField(default=0)),
                ('file_model', models.FileField(default=None, upload_to='')),
            ],
            options={
                'verbose_name': 'Модель К-ближайших соседей',
                'verbose_name_plural': 'Модели К-ближайших соседей',
                'db_table': 'knn',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='RandomForestModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('estimators', models.IntegerField(default=100)),
                ('max_features', models.CharField(choices=[('log2', 'log2'), ('sqrt', 'sqrt'), ('auto', 'auto')], default='auto', max_length=4)),
                ('min_samples_split', models.IntegerField(default=2)),
                ('min_samples_leaf', models.IntegerField(default=1)),
                ('mae', models.FloatField(default=0)),
                ('mse', models.FloatField(default=0)),
                ('file_model', models.FileField(default=None, upload_to='')),
            ],
            options={
                'verbose_name': 'Модель случайного леса',
                'verbose_name_plural': 'Модели случайного леса',
                'db_table': 'randomforest',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_hh', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('area', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('skills', models.TextField()),
                ('employer', models.CharField(blank=True, max_length=255, null=True)),
                ('employment', models.CharField(blank=True, max_length=50, null=True)),
                ('schedule', models.CharField(blank=True, max_length=50, null=True)),
                ('salary', models.IntegerField(blank=True, default=0, null=True)),
                ('predict_salary', models.IntegerField(blank=True, default=0, null=True)),
                ('date', models.DateField()),
            ],
            options={
                'verbose_name': 'Вакансия',
                'verbose_name_plural': 'Вакансии',
                'db_table': 'vacancy',
                'ordering': ['id_hh'],
            },
        ),
        migrations.CreateModel(
            name='XGBoostModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('estimators', models.IntegerField(default=100)),
                ('max_depth', models.IntegerField(default=6)),
                ('colsample_bytree', models.FloatField(default=1.0)),
                ('alpha', models.FloatField(default=0.01)),
                ('mae', models.FloatField(default=0)),
                ('mse', models.FloatField(default=0)),
                ('file_model', models.FileField(default=None, upload_to='')),
            ],
            options={
                'verbose_name': 'Модель градиентного бустинга',
                'verbose_name_plural': 'Модели градиентного бустинга',
                'db_table': 'xgboost',
                'ordering': ['id'],
            },
        ),
    ]
